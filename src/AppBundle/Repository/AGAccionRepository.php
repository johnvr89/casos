<?php

namespace AppBundle\Repository;

/**
 * AGAccionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AGAccionRepository extends \AppBundle\Libs\Repository\BaseRepository {

    public function getBaseQuery($baseEntity, $start = 0, $limit = 30, $filters = array(), $columnsAlias = array(), $decorator = ResultDecorator::DEFAULT_DECORATOR) {
        
    }
    
    public function getPermissionByController($idUser) {
        $controller = $this->createQueryBuilder('accion');
        $controller->select('accion.controlador');
        $controller->distinct();
        $result = $controller->getQuery()->getResult();

        $data = array();
        foreach ($result as $value) {
            $obj = array();

            $acctions = $this->findBy(array('controlador' => $value['controlador']), array("posicion" => "ASC"));

            foreach ($acctions as $actionObj) {
                $data[$value['controlador']][$actionObj->getNombre()] = $this->hasPermission($idUser, $actionObj->getId());
            }
        }

        return $data;
    }

    public function hasPermission($idUser, $action) {
        try {
            $qb = $this->createQueryBuilder('action');
            $qb->innerJoin('action.rol', 'rol');
            $qb->innerJoin('rol.usuario', 'usuario');
            $qb->where($qb->expr()->eq('usuario.id', '?1'));
            $qb->andWhere($qb->expr()->eq('action.id', '?2'));
            $qb->setParameter(1, $idUser);
            $qb->setParameter(2, $action);
            return count($qb->getQuery()->getResult() ) > 0;
        } catch (\Exception $e) {
            return false;
        }
    }

}
